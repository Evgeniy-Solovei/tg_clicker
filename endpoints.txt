1) Получение  основной информации  (если первый заход,создает user)     http://45.131.41.151:8000/api/main_info/<tg_id>/<name>/  (в параметры указывать tg_id и name)
Get - запрос
Ответ: 'lvl':(уровень) , 'coin':(монеты) ,energy_start(максимальная энергия), energy_now(энергии теперь),
crystal(донатерская валюта),flag_autobot( флаг который говорт запущен сейчас автобот или нет , если значение = false , значит запущен),
timer_autobot(время сколько секунд осталось если запущен , если не запущен , то показывает сколько будет секунд работать),
money_per_tap(деньги за тап),energy_per_tap(энергия за тап),coin_bonus_result ( сколько денег собралось с автобота),
league (лига пользователя), boxes_available (флаг доступны ли сундуки), show_instruction (флаг новый игрок)

2) Тап тап система http://45.131.41.151:8000/api/tap_tap/
Post - запрос Ожидаемые поля ( tg_id ,coin,energy_now )
Ответ: coin , energy_now


3) Автобот система (запускать только раз) http://45.131.41.151:8000/api/autobot/
Post - запрос Ожидаемые поля ( tg_id )
Ответ: timer(сколько времени отображать фронту) , flag_autobot ( флаг что таймер запущен)


4) Забрать бонусы с автобота   http://45.131.41.151:8000/api/takin_bonus_autobot/
Post - запрос Ожидаемые поля ( tg_id )
Ответ: "Success": "Деньги добавлены" - если успешно , если неуспешно "Error": "Нечего забирать"

5) Вся информация о доступных улучшениях    http://45.131.41.151:8000/api/info_upgrade/<int:tg_id>/   в параметры указывать tg_id!
Get - запрос
Ответ: energy (текущая максимально доступная энергия), energy_lvl(уровень этой энергии),price_lvl_up_energy(стоимость следующего улучшения),
damage(тут сколько будет тратиться и энергии за тап и столько же будет приносить денег),
price_lvl_up_damage_and_energy(цена этого улучшения),lvl_one_tap_damage_and_energy(уровень )


6) Улучшение энергии http://45.131.41.151:8000/api/UpgradeEnergy/
Post - запрос Ожидаемые поля ( tg_id )
Ответ:coin (остаток денег),energy_lvl(текущий уровень),price_lvl_up_energy (стоимость след улучшения)


7)Улучшение тапа http://45.131.41.151:8000/api/UpgradeDamage/
Post - запрос Ожидаемые поля ( tg_id )
Ответ:coin (остаток денег),one_tap_energy(за тап сколько убирает энергии,  damage (за тап сколько приносит денег),
lvl_one_tap_damage_and_energy(уровень этого улучшения) ,price_lvl_up_damage_and_energy(стоимость следующего улучшения)


8) Получаем все ящики с возможность посмотреть призы   http://45.131.41.151:8000/get_all_box/<int:tg_id>   в параметры указывать tg_id!
Get - запрос
Ответ:name(название ящика),price(стоимость) prize_name(название приза),prize_count(количество),prize_chance(шанс в процентах)


9)Открытие ящика http://45.131.41.151:8000/api/open_box/
Post - запрос Ожидаемые поля ( name_box,tg_id, free_open )
Ответ: prize_name(название приза),prize_count(количество),prize_chance(шанс в процентах), prize.id(id приза)

10) Забрать приз и сразу же применить http://45.131.41.151:8000/api/take_and_apply_bonus/
Post - запрос Ожидаемые поля ( смотреть фото в тг!!!!!!!!!!!!!)
Ответ: 'Success': 'Бонусы получены ' если успешно


11)Добавление в друзья (она рабаоет после того как человек перешел по реферальной ссылке , снчало запускается main_info, а потом этот эндпоинт)
http://45.131.41.151:8000/api/completeReferral/<int:new_id>/<int:referral_id>/   (new_id - tg_id нового пользователя , referral_id - tg_id игрока котоырй кинул приглос)
Get - запрос
Ответ: если успешно всё пройдёт ('Перейдите во кладку друзья и заберите бонус') , если неуспешно (Данной игрок уже находится у вас в друзьях)


12)Список всех друзей http://45.131.41.151:8000/api/all_friends/<int:tg_id>/
Get - запрос
Ответ : name, lvl, player_id(id друга (не тг id)),
referral_system_id ( ид связи друзей ( у каждого игрока с другим игроком есть связь, в этой связе реферал и новый игрок ) ,
flag ( если это флаг True значит бонус можно забрать , если False значит бонус уже забрали)


13)Забрать бонус за рефералку  http://45.131.41.151:8000/api/taking_referral_bonus/
Post - запрос Ожидаемые поля (tg_id)
Ответ: ( если это игрок который пригласил то 'name_box': 'Silver','free_open': True  , если новый игрок
'name_box': 'Bronze', 'free_open': True)
ВАЖНО! сразу после этого запроса вызывать эндпоинт 9)Открытие ящика http://45.131.41.151:8000/api/open_box/


14) Генерирует реферальную ссылку  http://45.131.41.151:8000/api/generate_link/<int:tg_id>/
Get - запрос
Ответ : Ссылка на бота в с доп КВЕРИ параметрами в которых будет зашит id игрока который сгенерировал эту ссылку
ВАЖНО! :  когда челевек будет запускать бота , у него будут КВЕРИ параметры который нужны для 11)Добавление в друзья

15) Получаем все лиги http://45.131.41.151:8000/all_leagues/
Get - запрос Ожидаемые поля (tg_id) или ('name') или без поля.
1) Если получаю поле tg_id, то отдаю текущую лигу юзера и всех игроков в этой лиге
2) Если получаю поле name, тогда отдаю лигу по названию и всех юзеров.
3) Если не указал не одно из полей, то я отдам список всех лиг.

16) Получаем все скины игрока http://45.131.41.151:8000/all_skins_player/<int:tg_id>/
Get - запрос. В параметры указывать tg_id
Ответ:prizes(приз скина),league(Лига) id_prize(id приза скина из БД), 'name', 'name' название , 'description' описание,
'available_skin' доступен/нет, 'is_active' активный/нет

17) Активация выбранного скина http://45.131.41.151:8000/activate-skin/
Post - запрос       В параметры указывать tg_id и skin_id

18) Получить все таски юзера http://45.131.41.151:8000/tasks/<int:tg_id>/
Get - запрос Ожидаемые поля (tg_id) или ('description') или всё вместе.
1) Если я получаю (tg_id), то отдаю список всех тасков юзера.
2) Если получаю (tg_id) и ('description') то отдаю 1 таску юзера.

19) Запуск выполнения таски http://45.131.41.151:8000/task/<int:tg_id>/<str:description>/start/
post - запрос Ожидаемые поля (tg_id) и ('description').
Это у тебя будет кнопка которая перекидывает юзера по ссылке, а я запускаю таймер 30 мин

20) Проверка выполнения таски юзера (прошло 30мин) http://45.131.41.151:8000/task/<int:tg_id>/<str:description>/
post - запрос Ожидаемые поля (tg_id) и ('description').
Когда пройдёт 30 мин и юзер нажмёт проверить, у меня автоматически таска будет выполнена.
